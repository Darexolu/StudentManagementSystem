@page "/systemcodesdetails/edit/{id:int}"
@using StudentManagementSystem.Client.Services
@using StudentManagementSystemShared.Models;
@inject NavigationManager navigation;


<h4>Update System Code Details</h4>

<hr />
<div class="row">
    <div class="col-md-12">
        <EditForm Model="systemcodedetailsobj" OnValidSubmit="UpdateSystemCodeDetail" FormName="updatesystemcodedetails">

            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Code</label>
                            <InputText for="Code" class="form-control" @bind-Value="@systemcodedetailsobj.Code" />
                            <ValidationMessage For="()=>systemcodedetailsobj.Code" />
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Description</label>
                            <InputText for="Description" class="form-control" @bind-Value="@systemcodedetailsobj.Description" />
                            <ValidationMessage For="()=>systemcodedetailsobj.Description" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">System Code</label>
                            <InputSelect for="SystemCodeId" class="form-control" @bind-Value="@systemcodedetailsobj.SystemCodeId">
                                <option value="">Select System Code</option>
                                @foreach (var systemcode in SystemCodes)
                                {
                                    <option value="@systemcode.Id">@systemcode.Description</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="()=>systemcodedetailsobj.SystemCodeId" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">Update System Code</button>
                <button type="button" @onclick="Cancel" class="btn btn-danger">Back to List</button>
            </div>

        </EditForm>
    </div>
</div>

@code {

    [SupplyParameterFromForm]
    public SystemCodeDetail systemcodedetailsobj { get; set; } = new();

    [Parameter]
    public int id { get; set; }

    List<SystemCode> SystemCodes = new List<SystemCode>();
    protected override async Task OnInitializedAsync()
    {
        SystemCodes = await SystemCodeService.GetAllAsync();
        if (systemcodedetailsobj.Code == null)
        {
            await LoadSystemCodeDetail();
        }
        else
        {
            systemcodedetailsobj.Id = id;
            UpdateSystemCodeDetail();
        }

    }
    public async Task LoadSystemCodeDetail()
    {
        systemcodedetailsobj = await SystemCodeDetailsService.GetByIdAsync(id);

    }
    protected async Task UpdateSystemCodeDetail()
    {
        var result = await SystemCodeDetailsService.UpdateAsync(systemcodedetailsobj);
        navigation.NavigateTo("/systemcodesdetails-list");
    }
    public void Cancel()
    {
        navigation.NavigateTo("/systemcodesdetails-list");
    }
    //now trying to fix the cancel button in all
}
