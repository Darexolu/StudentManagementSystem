@page "/teachers-list"
@using StudentManagementSystemShared.Models;
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime



<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Teachers</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <p><a class="btn btn-success float-end" href="/add-teacher">Add New Teacher</a></p>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header"></div>
                            @if (!AllTeachers.Any())
                            {
                                <p><em>Loading Teachers...</em></p>
                            }
                            @if (AllTeachers.Any())
                            {
                                <div class="card-body">
                                    <table class="table table-striped table-hover">
                                        <thead>
                                            <tr>
                                                <th>id</th>
                                                <th>FirstName</th>
                                                <th>MiddleName</th>
                                                <th>LastName</th>
                                                <th>Email</th>
                                                <th>PhoneNo</th>
                                                <th>Gender</th>
                                                <th>Edit</th>
                                                <th>Delete</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var teacher in AllTeachers)
                                            {
                                                <tr>
                                                    <td>@teacher.Id</td>
                                                    <td>@teacher.FirstName</td>
                                                    <td>@teacher.MiddleName</td>
                                                    <td>@teacher.LastName</td>
                                                    <td>@teacher.EmailAddress</td>
                                                    <td>@teacher.PhoneNumber</td>
                                                    <td>@teacher.Gender.Description</td>

                                                    <td>
                                                        <a class="btn btn-success" href="/teacher/edit/@teacher.Id"> Edit </a>
                                                    </td>
                                                    <td>
                                                        <a class="btn btn-danger" href="/teacher/delete/@teacher.Id"> Delete </a>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info"> There is no Teacher's List Available</div>
                            }
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Teacher> AllTeachers { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        await LoadAllTeachers();
    }
    private async Task LoadAllTeachers()
    {
        var teachers = await TeacherService.GetAllAsync();
        AllTeachers.Clear();
        if (teachers is null) return;
        foreach (var teacher in teachers)
        {
            AllTeachers.Add(teacher);
        }
    }
    private void EditTeacher(int id)
    {
        navigation.NavigateTo($"/teacher/edit/{id}");
    }
    private async Task DeleteTeacher(int Id)
    {
        var result = await TeacherService.DeleteAsync(Id);
        await LoadAllTeachers();
    }

}